\c postgres 

DROP database logparser;

CREATE database logparser;

\c logparser

CREATE TABLE facility (id SERIAL PRIMARY KEY, 
                title VARCHAR(100)
                );

INSERT INTO facility (id, title) VALUES 
(0, 'kernel messages'),
(1, 'user-level messages'),
(2, 'mail system'),
(3, 'system daemons'),
(4, 'security/authorization messages'),
(5, 'messages generated internally by Syslog'),
(6, 'line printer subsystem'),
(7, 'network news subsystem'),
(8, 'UUCP subsystem'),
(9, 'clock daemon'),
(10, 'security/authorization messages'),
(11, 'FTP daemon'),
(12, 'NTP subsystem'),
(13, 'log audit'),
(14, 'log  alert'),
(15, 'clock daemon'),
(16, 'local use 0 (local0)'),
(17, 'local use 1 (local1)'),
(18, 'local use 2 (local2)'),
(19, 'local use 2 (local3)'),
(20, 'local use 2 (local4)'),
(21, 'local use 2 (local5)'),
(22, 'local use 2 (local6)'),
(23, 'local use 2 (local7)');

CREATE TABLE severity (id SERIAL PRIMARY KEY, 
                title VARCHAR(30), 
                description TEXT
                );

INSERT INTO severity (id, title, description) VALUES 
(0,'Emergency','Состояние "паники", затрагивающее несколько приложений, серверов или сайтов. Система не работает. Немедленно сообщите об этом всему техническому персоналу.'),
(1,'Alert','Состояние, требующее немедленного устранения, например, потеря резервного подключения к какому-то узлу доступа. Сообщите сотрудникам, которые могут устранить проблему.'),
(2,'Critical','Состояние, требующее немедленного исправления или указывающее на сбой в основной системе, например, потерю подключения к основному интернет-провайдеру. Устраните КРИТИЧЕСКИЕ неполадки до появления проблем на уровне ПРЕДУПРЕЖДЕНИЯ.'),
(3,'Error','Несрочные сбои. Уведомляйте разработчиков или администраторов, поскольку ошибки должны быть устранены в течение заданного времени.'),
(4,'Warning','Предупреждающие сообщения не являются ошибками, но они указывают на то, что ошибка возникнет, если не будет предпринято требуемое действие. Примером может служить файловая система, которая заполнена на 85%. Каждый элемент должен быть устранен в течение заданного времени.'),
(5,'Notice','События, которые являются необычными, но не являются условиями возникновения ошибок. Эти сведения могут быть кратко изложены в электронном письме разработчикам или администраторам для выявления потенциальных проблем. Немедленных действий не требуется.'),
(6,'Informational','Обычные рабочие сообщения. Они могут использоваться для функций обслуживания сети, таких как создание отчетов и измерение пропускной способности. Никаких действий не требуется.'),
(7,'Debug','Информация, полезная разработчикам для отладки приложения. Эта информация бесполезна во время выполнения операций.');

CREATE TABLE hostname (id SERIAL PRIMARY KEY, 
            ip VARCHAR(20), 
            hostname VARCHAR(50), 
            timestamp TIMESTAMPTZ DEFAULT NOW(), 
            UNIQUE(ip, hostname)
            );

CREATE TABLE logparser_logs
(id SERIAL PRIMARY KEY, 
timestamp TIMESTAMPTZ DEFAULT NOW(), 
remotetimestamp TIMESTAMPTZ, 
hostname_id INT NOT NULL,
facility_id INT NOT NULL, 
severity_id INT NOT NULL,
content TEXT, 
tag TEXT,
FOREIGN KEY (hostname_id) REFERENCES hostname (id) ON DELETE CASCADE,
FOREIGN KEY (facility_id) REFERENCES facility (id) ON DELETE CASCADE,
FOREIGN KEY (severity_id) REFERENCES severity (id) ON DELETE CASCADE
);

CREATE INDEX logparser_logs_hostname_id_idx ON logparser_logs (hostname_id);
CREATE INDEX logparser_logs_facility_id_idx ON logparser_logs (facility_id);
CREATE INDEX logparser_logs_severity_id_idx ON logparser_logs (severity_id);
CREATE INDEX logparser_logs_timestamp_idx ON logparser_logs (timestamp);
CREATE INDEX logparser_logs_content_idx ON logparser_logs USING btree (content);